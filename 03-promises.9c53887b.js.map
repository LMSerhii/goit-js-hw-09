{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SA+B3C,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAGpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAxCPL,EAAYa,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAMC,EAAO,IAAIC,SAASjB,IAa5B,SAAsBkB,GACpB,I,IADsBC,EAAFD,EAAEb,MAAOe,EAATF,EAASE,KAAMC,EAAfH,EAAeG,OAC1BC,EAAI,EAAGA,GAAKD,EAAQC,IAC3BnB,EAAcmB,EAAGH,GAASG,EAAI,GAAKF,GAChCG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBP,EAAA2B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBP,EAAA2B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,KAZhEyB,CANkB,CAChBzB,MAAO0B,OAAOf,EAAKgB,IAAI,UACvBZ,KAAMW,OAAOf,EAAKgB,IAAI,SACtBX,OAAQU,OAAOf,EAAKgB,IAAI,aAK1BhC,EAAYiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElement = document.querySelector('.form');\n\nformElement.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const data = new FormData(formElement);\n\n  const dataValue = {\n    delay: Number(data.get('delay')),\n    step: Number(data.get('step')),\n    amount: Number(data.get('amount')),\n  };\n\n  startPromise(dataValue);\n\n  formElement.reset();\n}\n\nfunction startPromise({ delay, step, amount }) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + (i - 1) * step)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formElement","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","data","FormData","param1","delay1","step","amount","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$startPromise","Number","get","reset"],"version":3,"file":"03-promises.9c53887b.js.map"}